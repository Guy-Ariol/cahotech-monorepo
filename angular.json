{
  "version": 1,
  "projects": {
    "chimmo": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/chimmo",
      "sourceRoot": "apps/chimmo/src",
      "prefix": "cahotech-monorepo",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "D:/_Napata/dev/apps/cahotech-monorepo/apps/chimmo-native/www",
            "index": "apps/chimmo/src/index.html",
            "main": "apps/chimmo/src/main.ts",
            "polyfills": "apps/chimmo/src/polyfills.ts",
            "tsConfig": "apps/chimmo/tsconfig.app.json",
            "aot": true,
            "assets": ["apps/chimmo/src/favicon.ico", "apps/chimmo/src/assets"],
            "styles": [
              "apps/chimmo/src/theme.less",
              "apps/chimmo/src/styles.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/chimmo/src/environments/environment.ts",
                  "with": "apps/chimmo/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "chimmo:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "chimmo:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "chimmo:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/chimmo/tsconfig.app.json",
              "apps/chimmo/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/chimmo/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/chimmo/jest.config.js",
            "tsConfig": "apps/chimmo/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/chimmo/src/test-setup.ts"
          }
        }
      }
    },
    "chimmo-e2e": {
      "root": "apps/chimmo-e2e",
      "sourceRoot": "apps/chimmo-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/chimmo-e2e/cypress.json",
            "tsConfig": "apps/chimmo-e2e/tsconfig.e2e.json",
            "devServerTarget": "chimmo:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "chimmo:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/chimmo-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/chimmo-e2e/**/*"]
          }
        }
      }
    },
    "ui": {
      "root": "libs/ui",
      "sourceRoot": "libs/ui/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/ui/tsconfig.lib.json",
              "libs/ui/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/ui/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/ui/jest.config.js",
            "tsConfig": "libs/ui/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "interfaces": {
      "root": "libs/interfaces",
      "sourceRoot": "libs/interfaces/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/interfaces/tsconfig.lib.json",
              "libs/interfaces/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/interfaces/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/interfaces/jest.config.js",
            "tsConfig": "libs/interfaces/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "service": {
      "root": "libs/service",
      "sourceRoot": "libs/service/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/service/tsconfig.lib.json",
              "libs/service/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/service/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/service/jest.config.js",
            "tsConfig": "libs/service/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "learn-german-fast": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/learn-german-fast",
      "sourceRoot": "apps/learn-german-fast/src",
      "prefix": "cahotech-monorepo",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/learn-german-fast",
            "index": "apps/learn-german-fast/src/index.html",
            "main": "apps/learn-german-fast/src/main.ts",
            "polyfills": "apps/learn-german-fast/src/polyfills.ts",
            "tsConfig": "apps/learn-german-fast/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/learn-german-fast/src/favicon.ico",
              "apps/learn-german-fast/src/assets"
            ],
            "styles": [
              "apps/learn-german-fast/src/styles.scss",
              "apps/learn-german-fast/src/theme.less"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/learn-german-fast/src/environments/environment.ts",
                  "with": "apps/learn-german-fast/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "learn-german-fast:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "learn-german-fast:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "learn-german-fast:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/learn-german-fast/tsconfig.app.json",
              "apps/learn-german-fast/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/learn-german-fast/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/learn-german-fast/jest.config.js",
            "tsConfig": "apps/learn-german-fast/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/learn-german-fast/src/test-setup.ts"
          }
        }
      }
    },
    "learn-german-fast-e2e": {
      "root": "apps/learn-german-fast-e2e",
      "sourceRoot": "apps/learn-german-fast-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/learn-german-fast-e2e/cypress.json",
            "tsConfig": "apps/learn-german-fast-e2e/tsconfig.e2e.json",
            "devServerTarget": "learn-german-fast:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "learn-german-fast:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/learn-german-fast-e2e/tsconfig.e2e.json"],
            "exclude": [
              "**/node_modules/**",
              "!apps/learn-german-fast-e2e/**/*"
            ]
          }
        }
      }
    },
    "napata-home": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/napata-home",
      "sourceRoot": "apps/napata-home/src",
      "prefix": "cahotech-monorepo",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/napata-home",
            "index": "apps/napata-home/src/index.html",
            "main": "apps/napata-home/src/main.ts",
            "polyfills": "apps/napata-home/src/polyfills.ts",
            "tsConfig": "apps/napata-home/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/napata-home/src/favicon.ico",
              "apps/napata-home/src/assets"
            ],
            "styles": [
              "apps/napata-home/src/styles.scss",
              "apps/napata-home/src/theme.less"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/napata-home/src/environments/environment.ts",
                  "with": "apps/napata-home/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "napata-home:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "napata-home:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "napata-home:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/napata-home/tsconfig.app.json",
              "apps/napata-home/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/napata-home/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/napata-home/jest.config.js",
            "tsConfig": "apps/napata-home/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/napata-home/src/test-setup.ts"
          }
        }
      }
    },
    "napata-home-e2e": {
      "root": "apps/napata-home-e2e",
      "sourceRoot": "apps/napata-home-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/napata-home-e2e/cypress.json",
            "tsConfig": "apps/napata-home-e2e/tsconfig.e2e.json",
            "devServerTarget": "napata-home:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "napata-home:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/napata-home-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/napata-home-e2e/**/*"]
          }
        }
      }
    },
    "event-planner": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/event-planner",
      "sourceRoot": "apps/event-planner/src",
      "prefix": "cahotech-monorepo",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/event-planner",
            "index": "apps/event-planner/src/index.html",
            "main": "apps/event-planner/src/main.ts",
            "polyfills": "apps/event-planner/src/polyfills.ts",
            "tsConfig": "apps/event-planner/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/event-planner/src/favicon.ico",
              "apps/event-planner/src/assets"
            ],
            "styles": ["apps/event-planner/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/event-planner/src/environments/environment.ts",
                  "with": "apps/event-planner/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "event-planner:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "event-planner:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "event-planner:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/event-planner/tsconfig.app.json",
              "apps/event-planner/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/event-planner/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/event-planner/jest.config.js",
            "tsConfig": "apps/event-planner/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/event-planner/src/test-setup.ts"
          }
        }
      }
    },
    "event-planner-e2e": {
      "root": "apps/event-planner-e2e",
      "sourceRoot": "apps/event-planner-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/event-planner-e2e/cypress.json",
            "tsConfig": "apps/event-planner-e2e/tsconfig.e2e.json",
            "devServerTarget": "event-planner:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "event-planner:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/event-planner-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/event-planner-e2e/**/*"]
          }
        }
      }
    },
    "griot-moderne": {
      "projectType": "application",
      "schematics": {
        "@nrwl/angular:component": {
          "style": "scss"
        }
      },
      "root": "apps/griot-moderne",
      "sourceRoot": "apps/griot-moderne/src",
      "prefix": "cahotech-monorepo",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/griot-moderne",
            "index": "apps/griot-moderne/src/index.html",
            "main": "apps/griot-moderne/src/main.ts",
            "polyfills": "apps/griot-moderne/src/polyfills.ts",
            "tsConfig": "apps/griot-moderne/tsconfig.app.json",
            "aot": true,
            "assets": [
              "apps/griot-moderne/src/favicon.ico",
              "apps/griot-moderne/src/assets"
            ],
            "styles": ["apps/griot-moderne/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/griot-moderne/src/environments/environment.ts",
                  "with": "apps/griot-moderne/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "griot-moderne:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "griot-moderne:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "griot-moderne:build"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "apps/griot-moderne/tsconfig.app.json",
              "apps/griot-moderne/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/griot-moderne/**/*"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/griot-moderne/jest.config.js",
            "tsConfig": "apps/griot-moderne/tsconfig.spec.json",
            "passWithNoTests": true,
            "setupFile": "apps/griot-moderne/src/test-setup.ts"
          }
        }
      }
    },
    "griot-moderne-e2e": {
      "root": "apps/griot-moderne-e2e",
      "sourceRoot": "apps/griot-moderne-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/griot-moderne-e2e/cypress.json",
            "tsConfig": "apps/griot-moderne-e2e/tsconfig.e2e.json",
            "devServerTarget": "griot-moderne:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "griot-moderne:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": ["apps/griot-moderne-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/griot-moderne-e2e/**/*"]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "schematics": {
    "@nrwl/angular:application": {
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "unitTestRunner": "jest"
    }
  },
  "defaultProject": "chimmo"
}
